{"version":3,"sources":["reportWebVitals.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","audio","document","getElementById","App","props","state","breakCount","sessionCount","clockCount","currentTimer","isPlaying","handlePlayPause","clearInterval","loop","setState","setInterval","play","handleReset","pause","convertToTime","count","minutes","Math","floor","seconds","handleLengthChange","timerType","newCount","toLowerCase","undefined","this","breakProps","title","handleDecrease","handleIncrease","sessionProps","className","id","onClick","React","Component","SetTimer","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.0c294f8e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { FaMinus, FaPlus, FaPlay, FaSync, FaPause } from \"react-icons/fa\";\n\nimport \"./index.css\";\n// import App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst audio = document.getElementById(\"beep\");\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.loop = undefined;\n  }\n\n  state = {\n    breakCount: 5,\n    sessionCount: 25,\n    clockCount: 25 * 60,\n    // clockCount: 3,\n    currentTimer: \"Session\",\n    isPlaying: false,\n  };\n\n  componentWillUnmount() {\n    clearInterval(this.loop);\n  }\n\n  handlePlayPause = () => {\n    const { isPlaying } = this.state;\n\n    if (isPlaying) {\n      clearInterval(this.loop);\n\n      this.setState({\n        isPlaying: false,\n      });\n    } else {\n      this.setState({\n        isPlaying: true,\n      });\n\n      this.loop = setInterval(() => {\n        const { clockCount, currentTimer, breakCount, sessionCount } = this.state;\n\n        if (clockCount === 0) {\n          this.setState({\n            currentTimer: currentTimer === \"Session\" ? \"Break\" : \"Session\",\n            // clockCount: currentTimer === \"Session\" ? 3 : 3,\n            clockCount: currentTimer === \"Session\" ? breakCount * 60 : sessionCount * 60,\n          });\n\n          audio.play();\n        } else {\n          this.setState({\n            clockCount: clockCount - 1,\n          });\n        }\n      }, 1000);\n    }\n  };\n\n  handleReset = () => {\n    this.setState({\n      breakCount: 5,\n      sessionCount: 25,\n      clockCount: 25 * 60,\n      currentTimer: \"Session\",\n      isPlaying: false,\n    });\n\n    clearInterval(this.loop);\n\n    audio.pause();\n    audio.currentTimer = 0;\n  };\n\n  convertToTime = (count) => {\n    let minutes = Math.floor(count / 60);\n    let seconds = count % 60;\n\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n    return `${minutes}:${seconds}`;\n  };\n\n  handleLengthChange = (count, timerType) => {\n    const { sessionCount, breakCount, isPlaying, currentTimer } = this.state;\n\n    let newCount;\n\n    if (timerType === \"session\") {\n      newCount = sessionCount + count;\n    } else {\n      newCount = breakCount + count;\n    }\n\n    if (newCount > 0 && newCount < 61 && !isPlaying) {\n      this.setState({\n        [`${timerType}Count`]: newCount,\n      });\n\n      if (currentTimer.toLowerCase() === timerType) {\n        this.setState({\n          clockCount: newCount * 60,\n        });\n      }\n    }\n  };\n\n  render() {\n    const { breakCount, sessionCount, clockCount, currentTimer } = this.state;\n\n    const breakProps = {\n      title: \"Break\",\n      count: breakCount,\n      handleDecrease: () => this.handleLengthChange(-1, \"break\"),\n      handleIncrease: () => this.handleLengthChange(1, \"break\"),\n    };\n\n    const sessionProps = {\n      title: \"Session\",\n      count: sessionCount,\n      handleDecrease: () => this.handleLengthChange(-1, \"session\"),\n      handleIncrease: () => this.handleLengthChange(1, \"session\"),\n    };\n\n    return (\n      <div>\n        <div className=\"flex\">\n          <SetTimer {...breakProps} />\n          <SetTimer {...sessionProps} />\n        </div>\n\n        <div className=\"clock-container\">\n          <h1 id=\"timer-label\">{currentTimer}</h1>\n          <span id=\"time-left\">{this.convertToTime(clockCount)}</span>\n\n          <div className=\"flex\">\n            <button id=\"start_stop\" onClick={this.handlePlayPause}>\n              {this.state.isPlaying ? <FaPause /> : <FaPlay />}\n            </button>\n            <button id=\"reset\" onClick={this.handleReset}>\n              <FaSync />\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst SetTimer = (props) => {\n  const id = props.title.toLowerCase();\n  return (\n    <div className=\"timer-container\">\n      <h2 id={`${id}-label`}>{props.title} Length</h2>\n      <div className=\"flex actions-wrapper\">\n        <button id={`${id}-decrement`} onClick={props.handleDecrease}>\n          <FaMinus />\n        </button>\n        <span id={`${id}-length`}>{props.count}</span>\n        <button id={`${id}-increment`} onClick={props.handleIncrease}>\n          <FaPlus />\n        </button>\n      </div>\n    </div>\n  );\n};\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n\nreportWebVitals();\n"],"sourceRoot":""}